openapi: 3.0.1
servers:
  - url: https://api.kubbesa.net/staging
    description: Servidor staging
    x-displayName: staging
  # - url: https://api.kubbesa.net/dev
  #   description: Servidor Dev
  # - url: https://api.kubbesa.net/staging
  #   description: Servidor Staging

info:
  description: |
    # Introducción
    Este API esta docoumentado en formato **OpenAPI** desarrollado por el equipo de desarrollo de [Crediviva](https://crediviva.com.pa).
    Para esta documentación, puedes utilizar el api key `special-key` para probar los filtros de autorización.

    # Información de Autenticación 

    Crediviva ofrece la siguiente forma de autenticación:
      - API Key

    <!-- ReDoc-Inject: <security-definitions> -->

  version: 1.0.0
  title: Crediviva
  contact:
    name: Soporte de API
    email: dev@crediviva.com.pa
    url: https://crediviva.com.pa
  x-logo:
    url: "https://i0.wp.com/crediviva.com.pa/wp-content/uploads/2022/03/Logo_300dpi.png?w=3600&ssl=1"
    altText: Crediviva logo
tags:
  - name: Autenticación
    x-displayName: Autenticación
    description: Obtiene la información de los tokens asociados al usuario.
  - name: Solicitudes de Crédito
    x-displayName: Solicitudes de Crédito
    description: Accede a las solicitudes de crédito asociadas a tu comercio.
  - name: Créditos
    x-displayName: Créditos
    description: Accede a los créditos asociadas a tu comercio.
  - name: Departamentos
    x-displayName: Departamentos
    description: Operaciones sobre Departamentos para usuarios
  - name: Roles
    x-displayName: Roles
    description: Operaciones sobre roles para usuarios
  - name: Usuarios
    x-displayName: Usuarios
    description: Operaciones sobre usuarios
  - name: API CAJA
    x-displayName: Api Caja
    description: Operaciones en caja comercio
  - name: Desembolsos
    x-displayName: Desembolsos
    description: Operaciones sobre desembolsos
  - name: credit_application_model
    x-displayName: Solicitud de Crédito
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  - name: credit_model
    x-displayName: Crédito
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  - name: client_model
    x-displayName: Cliente
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  - name: department_model
    x-displayName: Departamento
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  - name: role_model
    x-displayName: Rol
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  - name: users_model
    x-displayName: Usuario
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Credit_Application" />
  
x-tagGroups:
  - name: Autenticación
    tags:
      - Autenticación
  - name: Créditos
    tags:
      # - Solicitudes de Crédito
      # - Créditos
      # - Clientes
      - Desembolsos
  - name: API CAJA
    tags:
      - API CAJA
  - name: API PULL
    tags:
      - API PULL
  # - name: Manejo de Usuarios
  #   tags:
  #     - Departamentos
  #     - Roles
  #     - Usuarios
  # - name: Modelos
  #   tags:
  #     - credit_application_model
  #     - credit_model
  #     - client_model
  #     - department_model
  #     - role_model
  #     - users_model
security:
  - {}
paths:
  /api-caja/get-balance:
    post:
      tags:
        - API CAJA
      summary: Obtener saldo del cliente
      description: Obtiene el saldo asociado al cliente
      operationId: get-balance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Get_Balance"
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
             schema:
                oneOf:
                  - $ref: "#/components/schemas/GetBalance"
                  - $ref: "#/components/schemas/GetBalanceAlreadyPaid"
        "400":
          description: No se ha proporcionado el número de cédula en la solicitud
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBalanceNoIdNumber"
        "403":
          description: Sin permisos para acceder al recurso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBalanceForbidden"
        "500":
          description: Error al conectarse a base de datos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBalanceErrorConnectingDb"
        "404":
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetBalanceUserNotFound"
                  - $ref: "#/components/schemas/GetBalanceCreditNotFound"
                  - $ref: "#/components/schemas/GetBalanceInstallmentsNotFound"
  /api-caja/get-payment-methods:
    get:
      tags:
        - API CAJA
      summary: Obtener métodos de pago disponibles
      description: Obtiene la lista de métodos de pago disponibles
      operationId: get-payment-methods
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentMethods"
        "500":
          description: Error al obtener los metodos de pago
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentMethodsError"   
  /api-caja/make-payment:
    post:
      tags:
        - API CAJA
      summary: Realizar un pago
      description: Procesa un pago asociado al cliente
      operationId: make-payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Make_Payment"
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakePayment"
      
        "400":
          description: No se ha proporcionado los parametros correspondientes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakePaymentNoParameters"
        "403":
          description: Sin permisos para acceder al recurso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakePaymentForbidden"
        "404":
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/MakePaymentUserNotFound"
                  - $ref: "#/components/schemas/MakePaymentCreditNotFound"
        "500":
          description: Error al realizar la solicitud
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/MakePaymentErroConnectingDb"
                  - $ref: "#/components/schemas/MakePaymentErroGettingReceipt"
                  - $ref: "#/components/schemas/MakePaymentErroSendingEmail"
                  - $ref: "#/components/schemas/MakePaymentErroMakingPayment"
                  - $ref: "#/components/schemas/MakePaymentErroGettingTransaction"
        "422":
          description: Error al procesar la solicitud
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/MakePaymentErroTransactionAmount"
  /pull/create-qr:
     post:
      tags:
        - API PULL
      summary: Generar código QR
      description: Genera el código qr que será escaneado por el cliente
      operationId: create-qr-code
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create_Qr_Code"
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQrCode"
        "400":
          description: No se ha proporcionado los parametros correspondientes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQrCodeNoParameters"
        "403":
          description: Sin permisos para acceder al recurso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQrCodeForbidden"
        "404":
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQrCodeCommerceNotFound"
        "500":
          description: Error al realizar la solicitud
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CreateQrCodeErrorConnectingDb"
                  - $ref: "#/components/schemas/CreateQrCodeErrorCreatingQR"
        "422":
          description: Error al procesar la solicitud
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQrCodeErrorTransactionAmount"
  /pull/get-info-qr:
     post:
      tags:
        - API PULL
      summary: Obtener información código QR
      description: Obtiene la información del estado del QR y desembolso
      operationId: get-info-qr
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Get_Info_Qr"
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInfoQr"
        "400":
          description: No se ha proporcionado los parametros correspondientes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInfoQrNoParameters"
        "403":
          description: Sin permisos para acceder al recurso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInfoQrForbidden"
        "404":
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInfoQrDisbursementNotFound"
        "500":
          description: Error al realizar la solicitud
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetInfoQrErrorConnectingDb"
                  - $ref: "#/components/schemas/GetInfoQrErrorGettingQR"
  /pull/cancel-qr:
     post:
      tags:
        - API PULL
      summary: Cancelar código QR
      description: Cancela el código QR generado
      operationId: cancel-qr
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cancel_Qr"
      security:
        - api_key:
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelQr"
        "400":
          description: No se ha proporcionado los parametros correspondientes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelQrNoParameters"
        "403":
          description: Sin permisos para acceder al recurso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelQrForbidden"
        "404":
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelQrNotFound"
        "500":
          description: Error al realizar la solicitud
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CancelQrErrorConnectingDb"
                  - $ref: "#/components/schemas/CancelQrErrorCancellingQR"
  /auth:
    get:
      tags:
        - Autenticación
      summary: Tokens de autenticacīón
      description: Retorna los tokens asociados al usaurio para acceder a los recursos del API
      operationId: auth
      parameters:
        - name: Authorization
          in: header
          description: Basic base64-encoded string de username:password
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"
        "400":
          description: Sin autenticación
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthNoHeader"
                  - $ref: "#/components/schemas/AuthRefreshInvalid"
  /auth/refresh:
    get:
      tags:
        - Autenticación
      summary: Refrescar Tokens de autenticacīón
      description: Retorna los nuevos tokens asociados al usaurio para acceder a los recursos del API
      operationId: authRefresh
      parameters:
        - name: Authorization
          in: header
          description: Basic base64-encoded string del refreshToken
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"
        "400":
          description: Sin autenticación
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AuthNoHeader"
                  - $ref: "#/components/schemas/AuthInvalid"
  /creditapplications:
    get:
      tags:
        - Solicitudes de Crédito
      summary: Listar solicitudes de crédito
      description: Retorna la lista de solicitudes de crédito asociados al comercio.
      operationId: getCreditApplications
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit_Application"
        "401":
          description: Sin autenticación
        "403":
          description: Sin autorización
        "500":
          description: Error de Servidor
      security:
        - api_key:
            - "leer: solicitudes de crédito"
  "/creditapplications/{id}":
    get:
      tags:
        - Solicitudes de Crédito
      summary: Buscar solicitud de crédito por Id
      description: "Retorna la solicitud de crédito por el Id suministrado."
      operationId: getCreditApplicationById
      parameters:
        - name: Autorización
          in: header
          description: Token de autorización
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id de la solicitud de crédito
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Id suministrado inválido
        "401":
          description: No authenticado
        "403":
          description: No autorizado
        "404":
          description: Usuario no encontrado
      security:
        - api_key:
            - "leer: solicitudes de crédito"
  /users:
    get:
      tags:
        - users
      summary: Listar usuarios
      description: Retorna la lista de usuarios registrados en el comercio
      operationId: getPetById
      parameters:
        - name: Authorization
          in: header
          description: Token de autorización
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit_Application"
        "401":
          description: No autenticado
        "403":
          description: No autorizado
        "500":
          description: Error del Servidor
      security:
        - api_key:
            - "leer: solicitudes de crédito"
    post:
      tags:
        - Usuarios
      summary: Crear usuario
      description: Crea un usuario en el sistema asociado a un comercio
      operationId: createUser
      responses:
        "200":
          description: Operación exitosa
        "401":
          description: No autenticado
        "403":
          description: No autorizado
        "500":
          description: Error del Servidor
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit_Application"
        description: Created user object
        required: true
      security:
        - api_key:
            - "escribir: usuarios"

  "/users/{id}":
    get:
      tags:
        - Usuarios
      summary: Obtener usuario por Id
      description: "Retorna el usuario asociado al Id especificado"
      operationId: getUserByName
      parameters:
        - name: id
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Id suministrado inválido
        "401":
          description: No authenticado
        "403":
          description: No autorizado
        "404":
          description: Usuario no encontrado
      security:
        - api_key:
            - "leer: solicitud de crédito"
    put:
      tags:
        - Usuarios
      summary: Actualizar usuario
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User is updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: Updated user object
        required: true
    delete:
      tags:
        - Usuarios
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User is deleted
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
  /user/login:
    get:
      tags:
        - Usuarios
      summary: Logs user into the system
      description: "Finaliza la sesión usuario"
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: OK
            application/xml:
              schema:
                type: string
              examples:
                response:
                  value: <Message> OK </Message>
            text/plain:
              examples:
                response:
                  value: OK
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - Usuarios
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  /qr:
    post:
      tags:
        - Desembolsos
      summary: Consumir código QR
      description: "Este recurso valida que el código QR sea válido aspectos como la fecha de expiración del código QR y perteneciente al comercio."
      operationId: scanQr
      requestBody:
        $ref: "#/components/requestBodies/qr"
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/qrResponse"
        "400":
          description: Código QR no sumunistrado
        "401":
          description: Sin autenticación
        "403":
          description: Sin autorización
        "409":
          description: Código QR Inválido
        "500":
          description: Error de Servidor
      security:
        - api_key:
            - "leer: desembolso"
            - "escribir: desembolso"
  /qr/status:
    get:
      tags:
        - Desembolsos
      summary: Status Código QR
      description: "Este recurso devuelve el status de un código QR."
      operationId: QrStatus
      parameters:
        - name: dataQR
          in: query
          description: Código QR consumido
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/qrStatusResponse"
        "400":
          description: Código QR no suministrado
        "401":
          description: Sin autenticación
        "403":
          description: Sin autorización
        "500":
          description: Error de Servidor
      security:
        - api_key:
            - "leer: desembolso"
            - "escribir: desembolso"
  /invoice:
    post:
      tags:
        - Desembolsos
      summary: Enviar factura
      description: "Este recurso acepta una factura por parte del comercio"
      operationId: invoice
      requestBody:
        $ref: "#/components/requestBodies/invoice"
      responses:
        "200":
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceResponse"
        "401":
          description: Sin autenticación
        "403":
          description: Sin autorización
        "500":
          description: Error de Servidor
      security:
        - api_key:
            - "leer: desembolso"
            - "escribir: desembolso"
components:
  schemas:
    qrResponse:
      type: object
      properties:
        dataQR:
          description: Código QR / Pin
          type: number
          example: 123456
        transactionId:
          description: ID único de transacción
          type: string
          example: 64cb0b3030b6e6d24b613553
        status:
          enum:
            - OK
            - EXPIRED
            - CANCELLED
            - CREDIT_NOT_FOUND
            - INSUFICIENT_CREDIT
            - INVALID_AMOUNT
            - INVALID_QR
        message:
          type: string
          example: "Message example"
    qrStatusResponse:
      type: object
      properties:
        dataQR:
          description: Código QR / Pin
          type: number
          example: 123456
        transactionId:
          description: ID único de transacción
          type: string
          example: 64cb0b3030b6e6d24b613553
        status:
          enum:
            - ACTIVE
            - APPROVED
            - CANCELLED
            - EXPIRED
            - PENDING
    InvoiceResponse:
      type: object
      properties:
        dataQR:
          type: number
        message:
          type: string
    Id:
      type: string
      readOnly: true
    Auth:
      type: object
      properties:
        idToken:
          type: string
          description: Token Bearer de autenticación para utilizar en los endpoints que requieran de autenticación. Expira cada hora
        refreshtToken:
          type: string
          description: Utilizado en el endpoint /auth/refresh para obtener un idToken renovado
    GetBalance:
      type: object
      properties:
        loanId:
          type: number
          description: Identificador único del crédito
        installmentNumber:
          type: number
          description: Plazo correspondiente a la cuota
        monthlyInstallment:
          type: number
          description: Monto inicial de la cuota
        amountPaid:
          type: number
          description: Monto pagado hasta el momento de la cuota
        remainingAmount:
          type: number
          description: Deuda pendiente de la cuota
        totalDebt:
          type: number
          description: Deuda total acumulada
        dueDate:
          type: string
          description: Fecha en la que la cuota vence
    GetBalanceAlreadyPaid:
      type: object
      properties:
        message:
          type: string
          example: "Credit fully paid"
    GetBalanceNoIdNumber:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "IdNumber is missing"
    GetBalanceForbidden:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    GetBalanceErrorConnectingDb:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error when connecting db"
    GetBalanceUserNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "User not found"
    GetBalanceCreditNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Credit not found"
    GetBalanceInstallmentsNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Installments not found"
    GetPaymentMethods:
      description: Sin Header
      properties:
        paymentMethods:
          type: string
          description: método de pago
    GetPaymentMethodsError:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error getting payment methods"
    MakePayment:
      type: object
      description: Sin Header
      properties:
        payment_date:
          type: string
          example: "12/28/2023, 9:47:58 a. m."
          description: "Fecha y hora del pago."
        collection_office:
          type: string
          example: "PANAMA STORE"
          description: "Oficina de cobro asociada al pago."
        customer_name:
          type: string
          example: "Pepito Flores"
          description: "Nombre completo del cliente."
        id_number:
          type: string
          example: "9-229-1200"
          description: "Número de identificación del cliente."
        credit_number:
          type: number
          example: 200231
          description: "Número de crédito asociado al pago."
        transaction_number:
          type: string
          example: "60b7509715a82214"
          description: "Número de transacción del pago."
        payment_method:
          type: string
          example: "RAP"
          description: "Método de pago utilizado."
        cashier_id:
          type: string
          example: "8aa9dc91-f09a-48a4-844b-3178d3610a28"
          description: "Identificación del cajero que procesó el pago."
        total_payment:
          type: string
          example: "$0.10"
          description: "Monto total del pago realizado."
        total_obligation_at_start:
          type: number
          example: 300
          description: Obligación total al inicio del proceso de pago.
        total_obligation_before_payment:
          type: number
          example: 219
          description: "Obligación total antes del pago."
        total_obligation_after_payment:
          type: number
          example: 218.9
          description: "Obligación total después del pago."
        total_obligation_if_pre_cancelled:
          type: number
          example: 218.9
          description: "Obligación total si se cancela antes del pago."
    MakePaymentNoParameters:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Missing parameters: parameters"
    MakePaymentForbidden:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    MakePaymentUserNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "User not found"
    MakePaymentCreditNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Credit not found"
    MakePaymentErroGettingReceipt:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error getting receipt"
    MakePaymentErroSendingEmail:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error sending email"
    MakePaymentErroMakingPayment:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error making payment"
    MakePaymentErroGettingTransaction:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error getting transaction"
    MakePaymentErroConnectingDb:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error when connecting db"
    MakePaymentErroTransactionAmount:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Transaction amount must be greater than zero"
    CreateQrCode:
      type: object
      description: Sin Header
      properties:
        dataQR:
          type: number
          example: "503212"
          description: "Código generado para ser escaneado en el qr"
    CreateQrCodeNoParameters:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Missing parameters: amount"
    CreateQrCodeForbidden:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    CreateQrCodeCommerceNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Commerce not found"
    CreateQrCodeErrorConnectingDb:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error when connecting db"
    CreateQrCodeErrorCreatingQR:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error creating QR"
    CreateQrCodeErrorTransactionAmount:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Transaction amount must be greater than zero"
    GetInfoQr:
      type: object
      description: Respuesta para obtener información de un código QR
      properties:
        dataQR:
          type: number
          example: 503212
          description: Código generado
        transactionId:
          description: ID único de transacción
          type: string
          example: 64cb0b3030b6e6d24b613553
        disbursementStatus:
          type: object
          properties:
            currentStatus:
              enum:
                - PENDING
                - IN_PROGRESS
                - VALIDATING_IDENTITY
                - PENDING_SIGNATURE
                - SIGNATURE_COMPLETED
                - REJECTED
                - CANCELLED
              type: string
              example: "IN_PROGRESS"
              description: Estado actual del QR y desembolso
            description:
              type: string
              example: "Código QR a la espera de escaneo"
              description: Descripción del estado del desembolso
        client:
          type: object
          properties:
            idNumber:
              type: string
              example: "1234567890"
              description: Número de identificación del cliente
            financeDetails:
              type: object
              properties:
                requestedAmount:
                  type: number
                  example: 1000
                  description: Monto solicitado
                availableBalance:
                  type: number
                  example: 500
                  description: Saldo disponible del cliente
                remainingAmount:
                  type: number
                  example: 500
                  description: Monto restante
        createdAt:
          type: string
          example: "2024-02-14T12:00:00Z"
          description: Fecha de creación del desembolso
        updatedAt:
          type: string
          example: "2024-02-14T12:30:00Z"
          description: Fecha de actualización del desembolso   
    GetInfoQrNoParameters:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Missing parameters: dataQR"
    GetInfoQrForbidden:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    GetInfoQrNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    GetInfoQrDisbursementNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Disbursement not found"
    GetInfoQrErrorConnectingDb:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error when connecting db"
    GetInfoQrErrorGettingQR:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error creating QR"
    CancelQr:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Código QR cancelado correctamente"
    CancelQrNoParameters:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Missing parameters: dataQR"
    CancelQrForbidden:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Forbidden"
    CancelQrNotFound:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Disbursement not found"
    CancelQrErrorConnectingDb:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error when connecting db"
    CancelQrErrorCancellingQR:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "Error cancelling QR"
    AuthNoHeader:
      type: object
      description: Sin Header
      properties:
        message:
          type: string
          example: "No Auth info provided"
    AuthInvalid:
      type: object
      description: Header inválido
      properties:
        error:
          type: string
          example: "Incorrect username or password."
    AuthRefreshInvalid:
      type: object
      description: Header inválido
      properties:
        error:
          type: string
          example: "Invalid refresh token"
    Get_Balance:
      type: object
      required:
        - idNumber
      properties:
        idNumber:
          type: string
          description: "formato X-XXX-XXXX"
    Get_Payment_Methods:
       type: object
    Make_Payment:
       type: object
       required:
         - creditId
         - transactionAmount
         - paymentTypeId
         - paymentMethod
       properties:
        creditId:
          type: number
        transactionAmount:
          type: number
        paymentTypeId:
          type: number
        paymentMethod:
          type: string
    Create_Qr_Code:
       type: object
       required:
         - amount
         - lineas
         - email
       properties:
        amount:
          type: number
          description: "Monto de la compra"
        lineas:
          type: array
          items:
            type: string
          description: "Descripción del producto comprado"
          example: ["CELULARES", "COMPUTADORAS", "LINEA BLANCA", "ELECTRODOMÉSTICOS", "INDUMENTARIA", "CALZADO" ]
        email:
          type: string
          example: "john-doe@gmail.com"
          description: "El email del cajero que esta generando el QR"
        name:
          type: string
          example: "John"
          description: "El nombre del cajero que esta generando el QR"
        lastname:
          type: string
          example: "Doe"
          description: "El apellido del cajero que esta generando el QR"
    Get_Info_Qr:
       type: object
       required:
         - dataQR
       properties:
        dataQR:
          type: number
          description: "Código del QR generado"
    Cancel_Qr:
       type: object
       required:
         - dataQR
       properties:
        dataQR:
          type: number
          description: "Código del QR generado"
    Credit_Application:
      type: object
      discriminator:
        propertyName: creditApplicationType
      properties:
        id:
          description: Credit_Application ID
          $ref: "#/components/schemas/Id"
        userId:
          description: Documento de identificación del cliente
          type: string
          example:
        status:
          type: string
          description: Credit_Application status in the store
          enum:
            - APPROVADO
            - PENDIENTE
            - RECHAZADO
    Qr:
      type: object
      required:
        - dataQR
        - amount
      properties:
        dataQR:
          type: number
          description: Código QR
          example: "123456"
        amount:
          description: Monto a consumir en el POS
          type: number
          example: 1000
    Invoice:
      type: object
      required:
        - dataQR
        - amount
        - orderId
        - file
      properties:
        dataQR:
          type: number
          description: Código QR consumido
          example: 123456
        amount:
          description: Monto total de la factura
          type: number
          example: 1000
        orderId:
          description: Id unico de la orden por parte del comercio
          type: string
          example: "transactionId-0123456789"
        file:
          description: Archivo de factura
          type: string
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        email:
          description: Correo electrónico del usuario
          type: string
          format: email
          example: dev@crediviva.com.pa
        given_name:
          description: Nombres del usuario
          type: string
          example: Dev
        familly_name:
          description: Apellidos del usuario
          type: string
          example: Crediviva
        status:
          description: Estado del usuario
          type: string
          enum:
            - ACTIVO
            - INACTIVO
  requestBodies:
    qr:
      content:
        application/json:
          schema:
            description: QR
            title: "Request Body"
            $ref: "#/components/schemas/Qr"
    invoice:
      content:
        application/json:
          schema:
            typedescription: Solicitud de Crédito
            title: "title rb disb"
            $ref: "#/components/schemas/Invoice"
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Para este ejemplo, puedes utilizar el `special-Key` el cual te concede de la autenticación necesaria para consumir los recursos expuestos para las operaciones descritas en el API.
    api_key:
      description: >
        Para este ejemplo, puedes utilizar el `special-Key` el cual te concede de la autenticación necesaria para consumir los recursos expuestos para las operaciones descritas en el API.
      type: apiKey
      name: Authorization
      in: header
